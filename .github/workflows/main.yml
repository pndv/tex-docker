name: Docker

on:
  release:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  FEDORA_IMAGE_NAME: texlive-fedora
  DOTNET_IMAGE_NAME: texlive-dotnet
  REGISTRY: ghcr.io
  

jobs:
  build_image:
    strategy:
      matrix: 
        dir: [TeXOnFedora, TeXOnDotNet]
        
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Log into registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract images metadata
        uses: docker/metadata-action@v4.6.0
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        

      - name: Build ${{ matrix.dir }} and push image
        run: |
          [ ${{ matrix.dir }} = "TeXOnFedora" ] && IMAGE_NAME='texlive-fedora' || IMAGE_NAME='texlive-dotnet'
          echo "Image name is ${IMAGE_NAME}"
          
          cd ${{ matrix.dir }}
          docker build . --file Dockerfile --tag ${IMAGE_NAME}

          IMAGE_ID=ghcr.io/${{ github.repository }}/${IMAGE_NAME}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          echo "docker tag ${IMAGE_NAME} $IMAGE_ID:$VERSION"
          docker tag ${IMAGE_NAME} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
