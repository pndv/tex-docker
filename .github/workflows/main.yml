name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  FEDORA_IMAGE_NAME: texlive-fedora
  DOTNET_IMAGE_NAME: texlive-dotnet
  

jobs:
  build_image:
    strategy:
      matrix: 
        os: [ubuntu-latest]
        include:
          - dir: TeXOnFedora
            imgName: texlive-fedora
          - dir: TeXOnDotNet
            imgName: texlive-dotnet
        
    runs-on: ${{ matrix.os }}
    
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v3

      - name: Build ${{ matrix.dir }}
        run: |
          cd ${{ matrix.dir }}
          docker build . --file Dockerfile --tag ${{ matrix.imgName }}
          cd -

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/${{ matrix.imgName }}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          cd ${{ matrix.dir }}
          echo "docker tag $FEDORA_IMAGE_NAME $IMAGE_ID:$VERSION"
          docker tag $FEDORA_IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          cd -
